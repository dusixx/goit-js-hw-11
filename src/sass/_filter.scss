$colorFilterBtnBg: gray;
$colorFilterBtnBorder: gray;
$filterExpanderHeight: 35px;
$filterMenuPadding: 12px;

.filter-list {
  position: fixed;
  left: 0;
  top: var(--header-height);
  z-index: 9;

  width: 100%;
  padding: 9px;

  display: flex;
  flex-wrap: wrap;
  justify-content: center;
  align-content: center;
  gap: 15px;

  font-size: 13px;
  text-transform: capitalize;
  background-color: white;
  border-bottom: 1px solid rgb(231, 231, 231);

  transition: transform var(--transition-params);

  &--hidden {
    transform: translate(0, -100%);
  }
}

.filter-list label {
  & input[type='checkbox'] {
    cursor: inherit;

    &:not([name='colors']) {
      margin-right: 5px;
    }

    & ~ span {
      display: block;
      white-space: nowrap;
    }
  }
}

.filter {
  position: relative;
  display: flex;
  align-items: center;
  user-select: none;
}

.filter#safesearch {
  @media screen and (min-width: #{$tablet}) {
    margin-left: 60px;
  }
}

.filter-list input[type='number'] {
  height: 30px;
  width: 50px;

  text-align: center;
  margin-left: 5px;
  padding: 0 7px 0 7px;

  font-size: 13px;
  color: inherit;

  border-radius: 7px;
  border: 1px solid rgb($colorFilterBtnBorder, 0.4);
  outline: none;

  transition: border-color var(--transition-params);

  &:hover,
  &:focus-visible {
    border-color: rgb($colorFilterBtnBorder, 0.7);
  }

  &::-webkit-outer-spin-button,
  &::-webkit-inner-spin-button {
    -webkit-appearance: none;
    margin: 0;
  }

  -moz-appearance: textfield;
}

.filter__expander {
  @extend %btn;

  display: flex;
  justify-content: center;
  align-items: center;

  height: $filterExpanderHeight;
  padding-left: 17px;
  padding-right: 17px;

  text-transform: inherit;
  font-family: inherit;
  font-size: inherit;
  white-space: nowrap;

  border-radius: 20px;
  background-color: rgb($colorFilterBtnBg, 0);
  border: 1px solid rgb($colorFilterBtnBorder, 0.3);
  outline: none;

  transition: background-color var(--transition-params);

  &::after {
    content: '▾';
    font-size: 20px;
    margin-left: 5px;
  }

  &:hover,
  &:focus-visible,
  &--expanded {
    background-color: rgb($colorFilterBtnBg, 0.2);
  }
}

// clear filter
.filter__expander span {
  display: none;

  margin-right: 7px;
  font-size: 18px;
  transition: color var(--transition-params);

  &:hover,
  &:focus-visible {
    transform: scale(1.2);
    color: var(--color-accent);
  }
}

// show filter menu
.filter__expander--expanded ~ .filter__menu {
  display: block;
}

.filter__menu {
  position: absolute;
  top: $filterExpanderHeight;
  z-index: 10;

  display: none;

  padding: $filterMenuPadding;
  background-color: var(--color-header-bg);
  border: 1px solid rgba(white, 0.2);

  &--hidden {
    display: none;
  }
}

.filter {
  & label {
    display: flex;
    align-items: center;
    line-height: 0;
    cursor: pointer;
  }
}

.filter__options {
  display: flex;
  flex-wrap: wrap;
  flex-direction: column;
  gap: 5px;

  color: rgb(194, 194, 194);

  // & input {
  //   margin-right: 5px;
  //   cursor: inherit;
  // }

  // & span {
  //   display: block;
  //   white-space: nowrap;
  // }
}

//
// стилизуем все, кроме grayscale и transparent
//
.filter__options[name='colors'] input[value] {
  &:not([value='grayscale']):not([value='transparent']) {
    appearance: unset;

    display: block;
    width: 15px;
    height: 15px;

    border: 1px solid rgb(255, 255, 255);
    outline: 1px solid rgb(206, 206, 206);

    &:hover,
    &:focus-visible {
      outline: 1px solid var(--color-accent);
    }

    &:checked {
      outline: 3px solid var(--color-accent);
    }

    & ~ span {
      display: none;
    }
  }
}

.filter__options[name='colors'] {
  display: flex;
  flex-direction: row;
}

.filter__option#grayscale {
  margin-bottom: 10px;
}

// .filter__options[name='colors'] input[value='grayscale'] {
//   margin-bottom: 10px;

//   & ~ span {
//     margin-bottom: 10px;
//   }
// }

.filter__menu button[name='applyFilter'] {
  @extend %btn-primary;

  width: 40px;
  height: 20px;
  margin-top: 10px;
  border-radius: 7px;

  transition: filter var(--transition-params);

  &:hover {
    filter: brightness(1.1);
  }
}
